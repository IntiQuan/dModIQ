% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dModFrameClass.R
\name{appendObj}
\alias{appendObj}
\title{Append an objective function to a basic dMod.frame}
\usage{
appendObj(
  dMod.frame,
  prd = list(g * (x * p)),
  obj_data = list(normL2(data, prd, e)),
  obj = list(obj_data),
  pars = list(structure(rnorm(length(getParameters(obj))), names = getParameters(obj))),
  times = list(seq(min(as.data.frame(data)[["time"]]),
    max(as.data.frame(data)[["time"]]) * 1.1, length.out = 200)),
  ...,
  keepCalls = F
)
}
\arguments{
\item{dMod.frame}{A dMod.frame}

\item{prd}{Expression after which the concatenated prediction function is formed. Has to wrapped in list()}

\item{obj_data}{Expression after which the objective function which describes the data is formed. Has to wrapped in list()}

\item{obj}{This object is taken by the standard fitting functions. At typical expression would be \code{list(obj_data +  constr)}. Has to wrapped in list()}

\item{pars}{A named vector of parameters to run e.g. test simulations of the model. Defaults to random parameters}

\item{times}{A vector of times to run e.g. test simulations of the model. Defaults to \code{seq(0, 1*t_max(data), length.out = 200)}}

\item{...}{Other columns which are mutations of existing ones or new columns.}

\item{keepCalls}{Store a record of the calls in a new colun? See \link{mutatedMod.frame}.}
}
\value{
The dMod.frame augmented by standardized columns
}
\description{
Append an objective function to a basic dMod.frame
}
